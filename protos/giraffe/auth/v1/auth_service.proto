syntax = "proto3";

package giraffe.auth.v1;

import "giraffe/gateway/v1/annotations.proto";
import "google/api/annotations.proto";

option go_package = "github.com/giraffe101/apis/auth/v1";

service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
    option (giraffe.gateway.v1.anonymous) = {};
  }

  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/logout"
      body: "*"
    };
    option (giraffe.gateway.v1.employee) = {};
    option (giraffe.gateway.v1.user) = {};
  }

  rpc GetProfile(GetProfileRequest) returns (GetProfileResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/profile"
      body: "*"
    };
    option (giraffe.gateway.v1.employee) = {};
    option (giraffe.gateway.v1.user) = {};
  }

  rpc CheckToken(CheckTokenRequest) returns (CheckTokenResponse);
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  string code = 1;
  string message = 2;
  AccessToken data = 3;

  message AccessToken {
    string access_token = 1;
    string refresh_token = 2;
    string token_type = 3;
    int32 expires_in = 4;
  }
}

message LogoutRequest {}

message LogoutResponse {
  string code = 1;
  string message = 2;
}

message GetProfileRequest {}

message GetProfileResponse {
  string code = 1;
  string message = 2;
  Profile data = 3;

  message Profile {
    string user_id = 1;
    string username = 2;
    string nickname = 3;
    string avatar_url = 4;
    repeated string codes = 5;
  }
}

message CheckTokenRequest {
  string access_token = 1;
  repeated Code codes = 2;

  message Code {
    string user_type = 1;
    repeated string codes = 2;
  }
}

message CheckTokenResponse {
  string code = 1;
  string message = 2;
  UserInfo data = 3;

  message UserInfo {
    string user_id = 1;
    string user_type = 2;
  }
}
